{
  "version": 3,
  "sources": ["../../react-map-gl/src/exports-maplibre.ts"],
  "sourcesContent": ["import * as React from 'react';\nimport type {\n  Map as MaplibreMap,\n  MapOptions,\n  Marker as MaplibreMarker,\n  MarkerOptions,\n  Popup as MaplibrePopup,\n  PopupOptions,\n  AttributionControl as MaplibreAttributionControl,\n  FullscreenControl as MaplibreFullscreenControl,\n  GeolocateControl as MaplibreGeolocateControl,\n  NavigationControl as MaplibreNavigationControl,\n  ScaleControl as MaplibreScaleControl\n} from 'maplibre-gl';\nimport {MapStyle, AnyLayer, AnySource} from './types/style-spec-maplibre';\n\nimport {default as _Map, MapProps as _MapProps} from './components/map';\nimport {default as _Marker, MarkerProps as _MarkerProps} from './components/marker';\nimport {default as _Popup, PopupProps as _PopupProps} from './components/popup';\nimport {\n  default as _AttributionControl,\n  AttributionControlProps as _AttributionControlProps\n} from './components/attribution-control';\nimport {\n  default as _FullscreenControl,\n  FullscreenControlProps as _FullscreenControlProps\n} from './components/fullscreen-control';\nimport {\n  default as _GeolocateControl,\n  GeolocateControlProps as _GeolocateControlProps\n} from './components/geolocate-control';\nimport {\n  default as _NavigationControl,\n  NavigationControlProps as _NavigationControlProps\n} from './components/navigation-control';\nimport {\n  default as _ScaleControl,\n  ScaleControlProps as _ScaleControlProps\n} from './components/scale-control';\nimport {default as _Layer, LayerProps as _LayerProps} from './components/layer';\nimport {default as _Source, SourceProps as _SourceProps} from './components/source';\nimport {useMap as _useMap} from './components/use-map';\nimport type {MapRef as _MapRef} from './mapbox/create-ref';\nimport type * as events from './types/events';\nimport type {MapCallbacks} from './types/events-maplibre';\n\nexport function useMap() {\n  return _useMap<MaplibreMap>();\n}\n\nexport type MapProps = _MapProps<MapOptions, MapStyle, MapCallbacks, MaplibreMap>;\nexport type MapRef = _MapRef<MaplibreMap>;\nconst mapLib = import('maplibre-gl');\nexport const Map = (() => {\n  return React.forwardRef(function Map(props: MapProps, ref: React.Ref<MapRef>) {\n    return _Map<MapOptions, MapStyle, MapCallbacks, MaplibreMap>(props, ref, mapLib);\n  });\n})();\n\nexport type MarkerProps = _MarkerProps<MarkerOptions, MaplibreMarker>;\nexport const Marker = _Marker as (\n  props: MarkerProps & React.RefAttributes<MaplibreMarker>\n) => React.ReactElement | null;\n\nexport type PopupProps = _PopupProps<PopupOptions, MaplibrePopup>;\nexport const Popup = _Popup as (\n  props: PopupProps & React.RefAttributes<MaplibrePopup>\n) => React.ReactElement | null;\n\ntype AttributionControlOptions = ConstructorParameters<typeof MaplibreAttributionControl>[0];\nexport type AttributionControlProps = _AttributionControlProps<AttributionControlOptions>;\nexport const AttributionControl = _AttributionControl as (\n  props: AttributionControlProps\n) => React.ReactElement | null;\n\ntype FullscreenControlOptions = ConstructorParameters<typeof MaplibreFullscreenControl>[0];\nexport type FullscreenControlProps = _FullscreenControlProps<FullscreenControlOptions>;\nexport const FullscreenControl = _FullscreenControl as (\n  props: FullscreenControlProps\n) => React.ReactElement | null;\n\ntype NavigationControlOptions = ConstructorParameters<typeof MaplibreNavigationControl>[0];\nexport type NavigationControlProps = _NavigationControlProps<NavigationControlOptions>;\nexport const NavigationControl = _NavigationControl as (\n  props: NavigationControlProps\n) => React.ReactElement | null;\n\ntype GeolocateControlOptions = ConstructorParameters<typeof MaplibreGeolocateControl>[0];\nexport type GeolocateControlProps = _GeolocateControlProps<\n  GeolocateControlOptions,\n  MaplibreGeolocateControl\n>;\nexport const GeolocateControl = _GeolocateControl as (\n  props: GeolocateControlProps & React.RefAttributes<MaplibreGeolocateControl>\n) => React.ReactElement | null;\n\ntype ScaleControlOptions = ConstructorParameters<typeof MaplibreScaleControl>[0];\nexport type ScaleControlProps = _ScaleControlProps<ScaleControlOptions>;\nexport const ScaleControl = _ScaleControl as (\n  props: ScaleControlProps\n) => React.ReactElement | null;\n\nexport type LayerProps = _LayerProps<AnyLayer>;\nexport const Layer = _Layer as (props: LayerProps) => React.ReactElement | null;\n\nexport type SourceProps = _SourceProps<AnySource>;\nexport const Source = _Source as (props: SourceProps) => React.ReactElement | null;\n\nexport {default as useControl} from './components/use-control';\nexport {MapProvider} from './components/use-map';\n\nexport default Map;\n\n// Types\nexport * from './types/public';\nexport type {default as Point} from '@mapbox/point-geometry';\nexport type {\n  PointLike,\n  LngLat,\n  LngLatLike,\n  LngLatBounds,\n  LngLatBoundsLike,\n  PaddingOptions,\n  MapGeoJSONFeature,\n  GeoJSONSource,\n  VideoSource,\n  ImageSource,\n  CanvasSource,\n  VectorTileSource\n} from 'maplibre-gl';\nexport * from './types/style-spec-maplibre';\n\n// Events\nexport type {\n  MapEvent,\n  MapMouseEvent,\n  MapLayerMouseEvent,\n  MapTouchEvent,\n  MapLayerTouchEvent,\n  MapStyleDataEvent,\n  MapSourceDataEvent,\n  MapWheelEvent,\n  MapBoxZoomEvent,\n  ErrorEvent,\n  ViewStateChangeEvent\n} from './types/events-maplibre';\nexport type PopupEvent = events.PopupEvent<MaplibrePopup>;\nexport type MarkerEvent = events.MarkerEvent<MaplibreMarker>;\nexport type MarkerDragEvent = events.MarkerDragEvent<MaplibreMarker>;\nexport type GeolocateEvent = events.GeolocateEvent<MaplibreGeolocateControl>;\nexport type GeolocateResultEvent = events.GeolocateResultEvent<MaplibreGeolocateControl>;\nexport type GeolocateErrorEvent = events.GeolocateErrorEvent<MaplibreGeolocateControl>;\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA,YAAuB;AA8CjB,SAAUA,UAAM;AACpB,SAAO,OAAO;AAChB;AAIA,IAAM,SAAS,OAAO,2BAAa;AAC5B,IAAMC,QAAO,MAAK;AACvB,SAAa,iBAAW,SAASA,KAAI,OAAiB,KAAsB;AAC1E,WAAO,IAAsD,OAAO,KAAK,MAAM;EACjF,CAAC;AACH,GAAE;AAGK,IAAM,SAAS;AAKf,IAAM,QAAQ;AAMd,IAAM,qBAAqB;AAM3B,IAAM,oBAAoB;AAM1B,IAAM,oBAAoB;AAS1B,IAAM,mBAAmB;AAMzB,IAAM,eAAe;AAKrB,IAAM,QAAQ;AAGd,IAAM,SAAS;AAKtB,IAAA,2BAAeA;",
  "names": ["useMap", "Map"]
}
