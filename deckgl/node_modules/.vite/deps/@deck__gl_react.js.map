{
  "version": 3,
  "sources": ["../../@deck.gl/react/src/deckgl.ts", "../../@deck.gl/react/src/utils/use-isomorphic-layout-effect.ts", "../../@deck.gl/react/src/utils/extract-jsx-layers.ts", "../../@deck.gl/react/src/utils/inherits-from.ts", "../../@deck.gl/react/src/utils/evaluate-children.ts", "../../@deck.gl/react/src/utils/position-children-under-views.ts", "../../@deck.gl/react/src/utils/deckgl-context.ts", "../../@deck.gl/react/src/utils/extract-styles.ts", "../../preact/src/constants.js", "../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/component.js", "../../preact/src/diff/props.js", "../../preact/src/create-context.js", "../../preact/src/diff/children.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../preact/jsx-runtime/src/utils.js", "../../preact/src/constants.js", "../../preact/jsx-runtime/src/index.js", "../../@deck.gl/widgets/src/components.tsx", "../../@deck.gl/widgets/src/fullscreen-widget.tsx", "../../@deck.gl/widgets/src/compass-widget.tsx", "../../@deck.gl/widgets/src/zoom-widget.tsx", "../../@deck.gl/react/src/utils/use-widget.ts", "../../@deck.gl/react/src/widgets/compass-widget.tsx", "../../@deck.gl/react/src/widgets/fullscreen-widget.tsx", "../../@deck.gl/react/src/widgets/zoom-widget.tsx"],
  "sourcesContent": ["// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\nimport {createElement, useRef, useState, useMemo, useEffect, useImperativeHandle} from 'react';\nimport {Deck} from '@deck.gl/core';\nimport useIsomorphicLayoutEffect from './utils/use-isomorphic-layout-effect';\n\nimport extractJSXLayers, {DeckGLRenderCallback} from './utils/extract-jsx-layers';\nimport positionChildrenUnderViews from './utils/position-children-under-views';\nimport extractStyles from './utils/extract-styles';\n\nimport type {DeckGLContextValue} from './utils/deckgl-context';\nimport type {DeckProps, View, Viewport} from '@deck.gl/core';\n\nexport type ViewOrViews = View | View[] | null;\n\n/* eslint-disable max-statements, accessor-pairs */\ntype DeckInstanceRef<ViewsT extends ViewOrViews> = {\n  deck?: Deck<ViewsT>;\n  redrawReason?: string | null;\n  lastRenderedViewports?: Viewport[];\n  viewStateUpdateRequested?: any;\n  interactionStateUpdateRequested?: any;\n  forceUpdate: () => void;\n  version: number;\n  control: React.ReactHTMLElement<HTMLElement> | null;\n};\n\n// Remove prop types in the base Deck class that support externally supplied canvas/WebGLContext\n/** DeckGL React component props */\nexport type DeckGLProps<ViewsT extends ViewOrViews = null> = Omit<\n  DeckProps<ViewsT>,\n  'width' | 'height' | 'gl' | 'parent' | 'canvas' | '_customRender'\n> & {\n  Deck?: typeof Deck;\n  width?: string | number;\n  height?: string | number;\n  children?: React.ReactNode | DeckGLRenderCallback;\n  ref?: React.Ref<DeckGLRef<ViewsT>>;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n};\n\nexport type DeckGLRef<ViewsT extends ViewOrViews = null> = {\n  deck?: Deck<ViewsT>;\n  pickObject: Deck['pickObject'];\n  pickObjects: Deck['pickObjects'];\n  pickMultipleObjects: Deck['pickMultipleObjects'];\n};\n\nfunction getRefHandles<ViewsT extends ViewOrViews>(\n  thisRef: DeckInstanceRef<ViewsT>\n): DeckGLRef<ViewsT> {\n  return {\n    get deck() {\n      return thisRef.deck;\n    },\n    // The following method can only be called after ref is available, by which point deck is defined in useEffect\n    pickObject: opts => thisRef.deck!.pickObject(opts),\n    pickMultipleObjects: opts => thisRef.deck!.pickMultipleObjects(opts),\n    pickObjects: opts => thisRef.deck!.pickObjects(opts)\n  };\n}\n\nfunction redrawDeck(thisRef: DeckInstanceRef<any>) {\n  if (thisRef.redrawReason) {\n    // Only redraw if we have received a dirty flag\n    // @ts-expect-error accessing protected method\n    thisRef.deck._drawLayers(thisRef.redrawReason);\n    thisRef.redrawReason = null;\n  }\n}\n\nfunction createDeckInstance<ViewsT extends ViewOrViews>(\n  thisRef: DeckInstanceRef<ViewsT>,\n  DeckClass: typeof Deck,\n  props: DeckProps<ViewsT>\n): Deck<ViewsT> {\n  const deck = new DeckClass({\n    ...props,\n    // The Deck's animation loop is independent from React's render cycle, causing potential\n    // synchronization issues. We provide this custom render function to make sure that React\n    // and Deck update on the same schedule.\n    _customRender: redrawReason => {\n      // Save the dirty flag for later\n      thisRef.redrawReason = redrawReason;\n\n      // Viewport/view state is passed to child components as props.\n      // If they have changed, we need to trigger a React rerender to update children props.\n      const viewports = deck.getViewports();\n      if (thisRef.lastRenderedViewports !== viewports) {\n        // Viewports have changed, update children props first.\n        // This will delay the Deck canvas redraw till after React update (in useLayoutEffect)\n        // so that the canvas does not get rendered before the child components update.\n        thisRef.forceUpdate();\n      } else {\n        redrawDeck(thisRef);\n      }\n    }\n  });\n  return deck;\n}\n\nfunction DeckGLWithRef<ViewsT extends ViewOrViews = null>(\n  props: DeckGLProps<ViewsT>,\n  ref: React.Ref<DeckGLRef<ViewsT>>\n) {\n  // A mechanism to force redraw\n  const [version, setVersion] = useState(0);\n  // A reference to persistent states\n  const _thisRef = useRef<DeckInstanceRef<ViewsT>>({\n    control: null,\n    version,\n    forceUpdate: () => setVersion(v => v + 1)\n  });\n  const thisRef = _thisRef.current;\n  // DOM refs\n  const containerRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  // extract any deck.gl layers masquerading as react elements from props.children\n  const jsxProps = useMemo(\n    () => extractJSXLayers(props),\n    [props.layers, props.views, props.children]\n  );\n\n  // Callbacks\n  let inRender = true;\n\n  const handleViewStateChange: DeckProps<ViewsT>['onViewStateChange'] = params => {\n    if (inRender && props.viewState) {\n      // Callback may invoke a state update. Defer callback to after render() to avoid React error\n      // In React StrictMode, render is executed twice and useEffect/useLayoutEffect is executed once\n      // Store deferred parameters in ref so that we can access it in another render\n      thisRef.viewStateUpdateRequested = params;\n      return null;\n    }\n    thisRef.viewStateUpdateRequested = null;\n    return props.onViewStateChange?.(params);\n  };\n\n  const handleInteractionStateChange: DeckProps<ViewsT>['onInteractionStateChange'] = params => {\n    if (inRender) {\n      // Callback may invoke a state update. Defer callback to after render() to avoid React error\n      // In React StrictMode, render is executed twice and useEffect/useLayoutEffect is executed once\n      // Store deferred parameters in ref so that we can access it in another render\n      thisRef.interactionStateUpdateRequested = params;\n    } else {\n      thisRef.interactionStateUpdateRequested = null;\n      props.onInteractionStateChange?.(params);\n    }\n  };\n\n  // Update Deck's props. If Deck needs redraw, this will trigger a call to `_customRender` in\n  // the next animation frame.\n  // Needs to be called both from initial mount, and when new props are received\n  const deckProps = useMemo(() => {\n    const forwardProps: DeckProps<ViewsT> = {\n      widgets: [],\n      ...props,\n      // Override user styling props. We will set the canvas style in render()\n      style: null,\n      width: '100%',\n      height: '100%',\n      parent: containerRef.current,\n      canvas: canvasRef.current,\n      layers: jsxProps.layers,\n      views: jsxProps.views as ViewsT,\n      onViewStateChange: handleViewStateChange,\n      onInteractionStateChange: handleInteractionStateChange\n    };\n\n    // The defaultValue for _customRender is null, which would overwrite the definition\n    // of _customRender. Remove to avoid frequently redeclaring the method here.\n    delete forwardProps._customRender;\n\n    if (thisRef.deck) {\n      thisRef.deck.setProps(forwardProps);\n    }\n\n    return forwardProps;\n  }, [props]);\n\n  useEffect(() => {\n    const DeckClass = props.Deck || Deck;\n\n    thisRef.deck = createDeckInstance(thisRef, DeckClass, {\n      ...deckProps,\n      parent: containerRef.current,\n      canvas: canvasRef.current\n    });\n\n    return () => thisRef.deck?.finalize();\n  }, []);\n\n  useIsomorphicLayoutEffect(() => {\n    // render has just been called. The children are positioned based on the current view state.\n    // Redraw Deck canvas immediately, if necessary, using the current view state, so that it\n    // matches the child components.\n    redrawDeck(thisRef);\n\n    // Execute deferred callbacks\n    const {viewStateUpdateRequested, interactionStateUpdateRequested} = thisRef;\n    if (viewStateUpdateRequested) {\n      handleViewStateChange(viewStateUpdateRequested);\n    }\n    if (interactionStateUpdateRequested) {\n      handleInteractionStateChange(interactionStateUpdateRequested);\n    }\n  });\n\n  useImperativeHandle(ref, () => getRefHandles(thisRef), []);\n\n  const currentViewports =\n    thisRef.deck && thisRef.deck.isInitialized ? thisRef.deck.getViewports() : undefined;\n\n  const {ContextProvider, width = '100%', height = '100%', id, style} = props;\n\n  const {containerStyle, canvasStyle} = useMemo(\n    () => extractStyles({width, height, style}),\n    [width, height, style]\n  );\n\n  // Props changes may lead to 3 types of updates:\n  // 1. Only the WebGL canvas - updated in Deck's render cycle (next animation frame)\n  // 2. Only the DOM - updated in React's lifecycle (now)\n  // 3. Both the WebGL canvas and the DOM - defer React rerender to next animation frame just\n  //    before Deck redraw to ensure perfect synchronization & avoid excessive redraw\n  //    This is because multiple changes may happen to Deck between two frames e.g. transition\n  if (\n    (!thisRef.viewStateUpdateRequested && thisRef.lastRenderedViewports === currentViewports) || // case 2\n    thisRef.version !== version // case 3 just before deck redraws\n  ) {\n    thisRef.lastRenderedViewports = currentViewports;\n    thisRef.version = version;\n\n    // Render the background elements (typically react-map-gl instances)\n    // using the view descriptors\n    const childrenUnderViews = positionChildrenUnderViews({\n      children: jsxProps.children,\n      deck: thisRef.deck,\n      ContextProvider\n    });\n\n    const canvas = createElement('canvas', {\n      key: 'canvas',\n      id: id || 'deckgl-overlay',\n      ref: canvasRef,\n      style: canvasStyle\n    });\n\n    // Render deck.gl as the last child\n    thisRef.control = createElement(\n      'div',\n      {id: `${id || 'deckgl'}-wrapper`, ref: containerRef, style: containerStyle},\n      [canvas, childrenUnderViews]\n    );\n  }\n\n  inRender = false;\n  return thisRef.control;\n}\n\nconst DeckGL = React.forwardRef(DeckGLWithRef) as <ViewsT extends ViewOrViews>(\n  props: DeckGLProps<ViewsT>\n) => React.ReactElement;\n\nexport default DeckGL;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// From https://github.com/streamich/react-use/blob/master/src/useIsomorphicLayoutEffect.ts\n// useLayoutEffect but does not trigger warning in server-side rendering\nimport {useEffect, useLayoutEffect} from 'react';\n\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect;\n\nexport default useIsomorphicLayoutEffect;\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\nimport {createElement} from 'react';\nimport {inheritsFrom} from './inherits-from';\nimport {Layer, View} from '@deck.gl/core';\nimport {isComponent} from './evaluate-children';\nimport type {LayersList, Viewport} from '@deck.gl/core';\n\nexport type DeckGLRenderCallbackArgs = {\n  /**\n   * the left offset of the current view, in pixels\n   */\n  x: number;\n  /**\n   * the top offset of the current view, in pixels\n   */\n  y: number;\n  /**\n   * the width of the current view, in pixels\n   */\n  width: number;\n  /**\n   * the height of the current view, in pixels\n   */\n  height: number;\n  /**\n   * the view state of the current view\n   */\n  viewState: any;\n  /**\n   * the `Viewport` instance of the current view\n   */\n  viewport: Viewport;\n};\n\nexport type DeckGLRenderCallback = (args: DeckGLRenderCallbackArgs) => React.ReactNode;\n\n// recursively wrap render callbacks in `View`\nfunction wrapInView(node: React.ReactNode | DeckGLRenderCallback): React.ReactNode {\n  if (typeof node === 'function') {\n    // React.Children does not traverse functions.\n    // All render callbacks must be protected under a <View>\n    // @ts-expect-error View is not a ReactJSXElement constructor. Only used as a temporary wrapper and will be removed in extractJSXLayers\n    return createElement(View, {}, node);\n  }\n  if (Array.isArray(node)) {\n    return node.map(wrapInView);\n  }\n  if (isComponent(node)) {\n    if (node.type === React.Fragment) {\n      return wrapInView(node.props.children);\n    }\n    if (inheritsFrom(node.type, View)) {\n      return node;\n    }\n  }\n  return node;\n}\n\n// extracts any deck.gl layers masquerading as react elements from props.children\nexport default function extractJSXLayers({\n  children,\n  layers = [],\n  views = null\n}: {\n  children?: React.ReactNode | DeckGLRenderCallback;\n  layers?: LayersList;\n  views?: View | View[] | null;\n}): {\n  children: React.ReactNode[];\n  layers: LayersList;\n  views: View | View[] | null;\n} {\n  const reactChildren: React.ReactNode[] = []; // extract real react elements (i.e. not deck.gl layers)\n  const jsxLayers: LayersList = []; // extracted layer from react children, will add to deck.gl layer array\n  const jsxViews: Record<string, View> = {};\n\n  // React.children\n  React.Children.forEach(wrapInView(children), reactElement => {\n    if (isComponent(reactElement)) {\n      // For some reason Children.forEach doesn't filter out `null`s\n      const ElementType = reactElement.type;\n      if (inheritsFrom(ElementType, Layer)) {\n        const layer = createLayer(ElementType, reactElement.props);\n        jsxLayers.push(layer);\n      } else {\n        reactChildren.push(reactElement);\n      }\n\n      // empty id => default view\n      if (inheritsFrom(ElementType, View) && ElementType !== View && reactElement.props.id) {\n        // @ts-ignore Cannot instantiate an abstract class (View)\n        const view = new ElementType(reactElement.props);\n        jsxViews[view.id] = view;\n      }\n    } else if (reactElement) {\n      reactChildren.push(reactElement);\n    }\n  });\n\n  // Avoid modifying views if no JSX views were found\n  if (Object.keys(jsxViews).length > 0) {\n    // If a view is specified in both views prop and JSX, use the one in views\n    if (Array.isArray(views)) {\n      views.forEach(view => {\n        jsxViews[view.id] = view;\n      });\n    } else if (views) {\n      jsxViews[views.id] = views;\n    }\n    views = Object.values(jsxViews);\n  }\n\n  // Avoid modifying layers array if no JSX layers were found\n  layers = jsxLayers.length > 0 ? [...jsxLayers, ...layers] : layers;\n\n  return {layers, children: reactChildren, views};\n}\n\nfunction createLayer(LayerType: typeof Layer, reactProps: any): Layer {\n  const props = {};\n  // Layer.defaultProps is treated as ReactElement.defaultProps and merged into react props\n  // Remove them\n  const defaultProps = LayerType.defaultProps || {};\n  for (const key in reactProps) {\n    if (defaultProps[key] !== reactProps[key]) {\n      props[key] = reactProps[key];\n    }\n  }\n  // @ts-ignore Cannot instantiate an abstract class (Layer)\n  return new LayerType(props);\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n// Check if one JavaScript class inherits from another\nexport function inheritsFrom<T>(Type: any, ParentType: T): Type is T {\n  while (Type) {\n    if (Type === ParentType) {\n      return true;\n    }\n    Type = Object.getPrototypeOf(Type);\n  }\n  return false;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\nimport {cloneElement} from 'react';\n\nconst MAP_STYLE = {position: 'absolute', zIndex: -1};\n\nexport default function evaluateChildren(\n  children: React.ReactNode | Function,\n  childProps: any\n): React.ReactNode {\n  if (typeof children === 'function') {\n    return children(childProps);\n  }\n  if (Array.isArray(children)) {\n    return children.map(child => evaluateChildren(child, childProps));\n  }\n  if (isComponent(children)) {\n    // Special treatment for react-map-gl's Map component\n    // to support shorthand use case <DeckGL><StaticMap /></DeckGL>\n    if (isReactMap(children)) {\n      // Place map under the canvas\n      childProps.style = MAP_STYLE;\n      return cloneElement(children, childProps);\n    }\n    if (needsDeckGLViewProps(children)) {\n      return cloneElement(children, childProps);\n    }\n  }\n\n  return children;\n}\n\nexport function isComponent(child: React.ReactNode): child is React.ReactElement {\n  return (child && typeof child === 'object' && 'type' in child) || false;\n}\n\nfunction isReactMap(child: React.ReactElement): boolean {\n  return child.props?.mapStyle;\n}\n\nfunction needsDeckGLViewProps(child: React.ReactElement): boolean {\n  const componentClass = child.type;\n  // @ts-expect-error deckGLViewProps is a custom hack defined on the constructor (nebula.gl)\n  return componentClass && componentClass.deckGLViewProps;\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\nimport {createElement} from 'react';\nimport {View} from '@deck.gl/core';\nimport {inheritsFrom} from './inherits-from';\nimport evaluateChildren, {isComponent} from './evaluate-children';\n\nimport type {ViewOrViews} from '../deckgl';\nimport type {Deck, Viewport} from '@deck.gl/core';\nimport {DeckGlContext, type DeckGLContextValue} from './deckgl-context';\n\n// Iterate over views and reposition children associated with views\n// TODO - Can we supply a similar function for the non-React case?\nexport default function positionChildrenUnderViews<ViewsT extends ViewOrViews>({\n  children,\n  deck,\n  ContextProvider = DeckGlContext.Provider\n}: {\n  children: React.ReactNode[];\n  deck?: Deck<ViewsT>;\n  ContextProvider?: React.Context<DeckGLContextValue>['Provider'];\n}): React.ReactNode[] {\n  // @ts-expect-error accessing protected property\n  const {viewManager} = deck || {};\n\n  if (!viewManager || !viewManager.views.length) {\n    return [];\n  }\n\n  const views: Record<\n    string,\n    {\n      viewport: Viewport;\n      children: React.ReactNode[];\n    }\n  > = {};\n  const defaultViewId = (viewManager.views[0] as View).id;\n\n  // Sort children by view id\n  for (const child of children) {\n    // Unless child is a View, position / render as part of the default view\n    let viewId = defaultViewId;\n    let viewChildren = child;\n\n    if (isComponent(child) && inheritsFrom(child.type, View)) {\n      viewId = child.props.id || defaultViewId;\n      viewChildren = child.props.children;\n    }\n\n    const viewport = viewManager.getViewport(viewId) as Viewport;\n    const viewState = viewManager.getViewState(viewId);\n\n    // Drop (auto-hide) elements with viewId that are not matched by any current view\n    if (viewport) {\n      viewState.padding = viewport.padding;\n      const {x, y, width, height} = viewport;\n      // Resolve potentially relative dimensions using the deck.gl container size\n      viewChildren = evaluateChildren(viewChildren, {\n        x,\n        y,\n        width,\n        height,\n        viewport,\n        viewState\n      });\n\n      if (!views[viewId]) {\n        views[viewId] = {\n          viewport,\n          children: []\n        };\n      }\n      views[viewId].children.push(viewChildren);\n    }\n  }\n\n  // Render views\n  return Object.keys(views).map(viewId => {\n    const {viewport, children: viewChildren} = views[viewId];\n    const {x, y, width, height} = viewport;\n    const style = {\n      position: 'absolute',\n      left: x,\n      top: y,\n      width,\n      height\n    };\n\n    const key = `view-${viewId}`;\n    // If children is passed as an array, React will throw the \"each element in a list needs\n    // a key\" warning. Sending each child as separate arguments removes this requirement.\n    const viewElement = createElement('div', {key, id: key, style}, ...viewChildren);\n\n    const contextValue: DeckGLContextValue = {\n      deck,\n      viewport,\n      // @ts-expect-error accessing protected property\n      container: deck.canvas.offsetParent,\n      // @ts-expect-error accessing protected property\n      eventManager: deck.eventManager,\n      onViewStateChange: params => {\n        params.viewId = viewId;\n        // @ts-expect-error accessing protected method\n        deck._onViewStateChange(params);\n      },\n      widgets: []\n    };\n    const providerKey = `view-${viewId}-context`;\n    return createElement(ContextProvider, {key: providerKey, value: contextValue}, viewElement);\n  });\n}\n", "import {createContext} from 'react';\nimport type {EventManager} from 'mjolnir.js';\nimport type {Deck, DeckProps, Viewport, Widget} from '@deck.gl/core';\n\nexport type DeckGLContextValue = {\n  viewport: Viewport;\n  container: HTMLElement;\n  eventManager: EventManager;\n  onViewStateChange: DeckProps['onViewStateChange'];\n  deck?: Deck<any>;\n  widgets?: Widget[];\n};\n\n// @ts-ignore\nexport const DeckGlContext = createContext<DeckGLContextValue>();\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nimport * as React from 'react';\n\nconst CANVAS_ONLY_STYLES = {\n  mixBlendMode: null\n};\n\nexport default function extractStyles({\n  width,\n  height,\n  style\n}: {\n  width?: string | number;\n  height?: string | number;\n  style?: Partial<CSSStyleDeclaration> | null;\n}): {\n  containerStyle: React.CSSProperties;\n  canvasStyle: React.CSSProperties;\n} {\n  // This styling is enforced for correct positioning with children\n  const containerStyle: React.CSSProperties = {\n    position: 'absolute',\n    zIndex: 0,\n    left: 0,\n    top: 0,\n    width,\n    height\n  };\n\n  // Fill the container\n  const canvasStyle: React.CSSProperties = {\n    left: 0,\n    top: 0\n  };\n\n  if (style) {\n    for (const key in style) {\n      if (key in CANVAS_ONLY_STYLES) {\n        // apply style to the canvas, but not deck's children, e.g. mix-blend-mode\n        canvasStyle[key] = style[key];\n      } else {\n        // apply style to the container, e.g. position/flow settings\n        containerStyle[key] = style[key];\n      }\n    }\n  }\n\n  return {containerStyle, canvasStyle};\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { EMPTY_ARR } from './constants';\n\nexport const isArray = Array.isArray;\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-expect-error We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {import('./index').ContainerNode} node The node to remove\n */\nexport function removeNode(node) {\n\tif (node && node.parentNode) node.parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\nimport { UNDEFINED } from './constants';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor for this\n * virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the\n * virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === UNDEFINED) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\t/** @type {import('./internal').VNode} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_component: null,\n\t\tconstructor: UNDEFINED,\n\t\t_original: original == null ? ++vnodeId : original,\n\t\t_index: -1,\n\t\t_flags: 0\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor == UNDEFINED;\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { MODE_HYDRATE } from './constants';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function BaseComponent(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nBaseComponent.prototype.setState = function (update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nBaseComponent.prototype.forceUpdate = function (callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {ComponentChildren | void}\n */\nBaseComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._index + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet oldVNode = component._vnode,\n\t\toldDom = oldVNode._dom,\n\t\tcommitQueue = [],\n\t\trefQueue = [];\n\n\tif (component._parentDom) {\n\t\tconst newVNode = assign({}, oldVNode);\n\t\tnewVNode._original = oldVNode._original + 1;\n\t\tif (options.vnode) options.vnode(newVNode);\n\n\t\tdiff(\n\t\t\tcomponent._parentDom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tcomponent._parentDom.namespaceURI,\n\t\t\toldVNode._flags & MODE_HYDRATE ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(oldVNode) : oldDom,\n\t\t\t!!(oldVNode._flags & MODE_HYDRATE),\n\t\t\trefQueue\n\t\t);\n\n\t\tnewVNode._original = oldVNode._original;\n\t\tnewVNode._parent._children[newVNode._index] = newVNode;\n\t\tcommitRoot(commitQueue, newVNode, refQueue);\n\n\t\tif (newVNode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(newVNode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst defer =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/**\n * @param {import('./internal').Component} a\n * @param {import('./internal').Component} b\n */\nconst depthSort = (a, b) => a._vnode._depth - b._vnode._depth;\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort(depthSort);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort(depthSort);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { IS_NON_DIMENSIONAL, SVG_NAMESPACE } from '../constants';\nimport options from '../options';\n\nfunction setStyle(style, key, value) {\n\tif (key[0] == '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\nconst CAPTURE_REGEX = /(PointerCapture)$|Capture$/i;\n\n// A logical clock to solve issues like https://github.com/preactjs/preact/issues/3927.\n// When the DOM performs an event it leaves micro-ticks in between bubbling up which means that\n// an event can trigger on a newly reated DOM-node while the event bubbles up.\n//\n// Originally inspired by Vue\n// (https://github.com/vuejs/core/blob/caeb8a68811a1b0f79/packages/runtime-dom/src/modules/events.ts#L90-L101),\n// but modified to use a logical clock instead of Date.now() in case event handlers get attached\n// and events get dispatched during the same millisecond.\n//\n// The clock is incremented after each new event dispatch. This allows 1 000 000 new events\n// per second for over 280 years before the value reaches Number.MAX_SAFE_INTEGER (2**53 - 1).\nlet eventClock = 0;\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {string} namespace Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, namespace) {\n\tlet useCapture;\n\n\to: if (name == 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] == 'o' && name[1] == 'n') {\n\t\tuseCapture = name != (name = name.replace(CAPTURE_REGEX, '$1'));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (\n\t\t\tname.toLowerCase() in dom ||\n\t\t\tname == 'onFocusOut' ||\n\t\t\tname == 'onFocusIn'\n\t\t)\n\t\t\tname = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tvalue._attached = eventClock;\n\t\t\t\tdom.addEventListener(\n\t\t\t\t\tname,\n\t\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\t\tuseCapture\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tvalue._attached = oldValue._attached;\n\t\t\t}\n\t\t} else {\n\t\t\tdom.removeEventListener(\n\t\t\t\tname,\n\t\t\t\tuseCapture ? eventProxyCapture : eventProxy,\n\t\t\t\tuseCapture\n\t\t\t);\n\t\t}\n\t} else {\n\t\tif (namespace == SVG_NAMESPACE) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname != 'width' &&\n\t\t\tname != 'height' &&\n\t\t\tname != 'href' &&\n\t\t\tname != 'list' &&\n\t\t\tname != 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname != 'tabIndex' &&\n\t\t\tname != 'download' &&\n\t\t\tname != 'rowSpan' &&\n\t\t\tname != 'colSpan' &&\n\t\t\tname != 'role' &&\n\t\t\tname != 'popover' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// aria- and data- attributes have no boolean representation.\n\t\t// A `false` value is different from the attribute not being\n\t\t// present, so we can't remove it. For non-boolean aria\n\t\t// attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost too many bytes. On top of\n\t\t// that other frameworks generally stringify `false`.\n\n\t\tif (typeof value == 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name[4] == '-')) {\n\t\t\tdom.setAttribute(name, name == 'popover' && value == true ? '' : value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\n/**\n * Create an event proxy function.\n * @param {boolean} useCapture Is the event handler for the capture phase.\n * @private\n */\nfunction createEventProxy(useCapture) {\n\t/**\n\t * Proxy an event to hooked event handlers\n\t * @param {import('../internal').PreactEvent} e The event object from the browser\n\t * @private\n\t */\n\treturn function (e) {\n\t\tif (this._listeners) {\n\t\t\tconst eventHandler = this._listeners[e.type + useCapture];\n\t\t\tif (e._dispatched == null) {\n\t\t\t\te._dispatched = eventClock++;\n\n\t\t\t\t// When `e._dispatched` is smaller than the time when the targeted event\n\t\t\t\t// handler was attached we know we have bubbled up to an element that was added\n\t\t\t\t// during patching the DOM.\n\t\t\t} else if (e._dispatched < eventHandler._attached) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn eventHandler(options.event ? options.event(e) : e);\n\t\t}\n\t};\n}\n\nconst eventProxy = createEventProxy(false);\nconst eventProxyCapture = createEventProxy(true);\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {Set<import('./internal').Component> | null} */\n\t\t\t\tlet subs = new Set();\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.componentWillUnmount = () => {\n\t\t\t\t\tsubs = null;\n\t\t\t\t};\n\n\t\t\t\tthis.shouldComponentUpdate = function (_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\tsubs.forEach(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.add(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tif (subs) {\n\t\t\t\t\t\t\tsubs.delete(c);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType =\n\t\tcontext);\n}\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport {\n\tEMPTY_OBJ,\n\tEMPTY_ARR,\n\tINSERT_VNODE,\n\tMATCHED,\n\tUNDEFINED\n} from '../constants';\nimport { isArray } from '../util';\nimport { getDomSibling } from '../component';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * Diff the children of a virtual node\n * @param {PreactElement} parentDom The DOM element whose children are being\n * diffed\n * @param {ComponentChildren[]} renderResult\n * @param {VNode} newParentVNode The new virtual node whose children should be\n * diff'ed against oldParentVNode\n * @param {VNode} oldParentVNode The old virtual node whose children should be\n * diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\tlet i,\n\t\t/** @type {VNode} */\n\t\toldVNode,\n\t\t/** @type {VNode} */\n\t\tchildVNode,\n\t\t/** @type {PreactElement} */\n\t\tnewDom,\n\t\t/** @type {PreactElement} */\n\t\tfirstChildDom;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\t/** @type {VNode[]} */\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet newChildrenLength = renderResult.length;\n\n\toldDom = constructNewChildrenArray(\n\t\tnewParentVNode,\n\t\trenderResult,\n\t\toldChildren,\n\t\toldDom,\n\t\tnewChildrenLength\n\t);\n\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\tchildVNode = newParentVNode._children[i];\n\t\tif (childVNode == null) continue;\n\n\t\t// At this point, constructNewChildrenArray has assigned _index to be the\n\t\t// matchingIndex for this VNode's oldVNode (or -1 if there is no oldVNode).\n\t\tif (childVNode._index === -1) {\n\t\t\toldVNode = EMPTY_OBJ;\n\t\t} else {\n\t\t\toldVNode = oldChildren[childVNode._index] || EMPTY_OBJ;\n\t\t}\n\n\t\t// Update childVNode._index to its final index\n\t\tchildVNode._index = i;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tlet result = diff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\n\t\t// Adjust DOM nodes\n\t\tnewDom = childVNode._dom;\n\t\tif (childVNode.ref && oldVNode.ref != childVNode.ref) {\n\t\t\tif (oldVNode.ref) {\n\t\t\t\tapplyRef(oldVNode.ref, null, childVNode);\n\t\t\t}\n\t\t\trefQueue.push(\n\t\t\t\tchildVNode.ref,\n\t\t\t\tchildVNode._component || newDom,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t}\n\n\t\tif (firstChildDom == null && newDom != null) {\n\t\t\tfirstChildDom = newDom;\n\t\t}\n\n\t\tif (\n\t\t\tchildVNode._flags & INSERT_VNODE ||\n\t\t\toldVNode._children === childVNode._children\n\t\t) {\n\t\t\toldDom = insert(childVNode, oldDom, parentDom);\n\t\t} else if (typeof childVNode.type == 'function' && result !== UNDEFINED) {\n\t\t\toldDom = result;\n\t\t} else if (newDom) {\n\t\t\toldDom = newDom.nextSibling;\n\t\t}\n\n\t\t// Unset diffing flags\n\t\tchildVNode._flags &= ~(INSERT_VNODE | MATCHED);\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} newParentVNode\n * @param {ComponentChildren[]} renderResult\n * @param {VNode[]} oldChildren\n */\nfunction constructNewChildrenArray(\n\tnewParentVNode,\n\trenderResult,\n\toldChildren,\n\toldDom,\n\tnewChildrenLength\n) {\n\t/** @type {number} */\n\tlet i;\n\t/** @type {VNode} */\n\tlet childVNode;\n\t/** @type {VNode} */\n\tlet oldVNode;\n\n\tlet oldChildrenLength = oldChildren.length,\n\t\tremainingOldChildren = oldChildrenLength;\n\n\tlet skew = 0;\n\n\tnewParentVNode._children = new Array(newChildrenLength);\n\tfor (i = 0; i < newChildrenLength; i++) {\n\t\t// @ts-expect-error We are reusing the childVNode variable to hold both the\n\t\t// pre and post normalized childVNode\n\t\tchildVNode = renderResult[i];\n\n\t\tif (\n\t\t\tchildVNode == null ||\n\t\t\ttypeof childVNode == 'boolean' ||\n\t\t\ttypeof childVNode == 'function'\n\t\t) {\n\t\t\tnewParentVNode._children[i] = null;\n\t\t\tcontinue;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint' ||\n\t\t\tchildVNode.constructor == String\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode.constructor === UNDEFINED && childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\tconst skewedIndex = i + skew;\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Temporarily store the matchingIndex on the _index property so we can pull\n\t\t// out the oldVNode in diffChildren. We'll override this to the VNode's\n\t\t// final index after using this property to get the oldVNode\n\t\tconst matchingIndex = (childVNode._index = findMatchingIndex(\n\t\t\tchildVNode,\n\t\t\toldChildren,\n\t\t\tskewedIndex,\n\t\t\tremainingOldChildren\n\t\t));\n\n\t\toldVNode = null;\n\t\tif (matchingIndex !== -1) {\n\t\t\toldVNode = oldChildren[matchingIndex];\n\t\t\tremainingOldChildren--;\n\t\t\tif (oldVNode) {\n\t\t\t\toldVNode._flags |= MATCHED;\n\t\t\t}\n\t\t}\n\n\t\t// Here, we define isMounting for the purposes of the skew diffing\n\t\t// algorithm. Nodes that are unsuspending are considered mounting and we detect\n\t\t// this by checking if oldVNode._original === null\n\t\tconst isMounting = oldVNode == null || oldVNode._original === null;\n\n\t\tif (isMounting) {\n\t\t\tif (matchingIndex == -1) {\n\t\t\t\tskew--;\n\t\t\t}\n\n\t\t\t// If we are mounting a DOM VNode, mark it for insertion\n\t\t\tif (typeof childVNode.type != 'function') {\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t} else if (matchingIndex != skewedIndex) {\n\t\t\t// When we move elements around i.e. [0, 1, 2] --> [1, 0, 2]\n\t\t\t// --> we diff 1, we find it at position 1 while our skewed index is 0 and our skew is 0\n\t\t\t//     we set the skew to 1 as we found an offset.\n\t\t\t// --> we diff 0, we find it at position 0 while our skewed index is at 2 and our skew is 1\n\t\t\t//     this makes us increase the skew again.\n\t\t\t// --> we diff 2, we find it at position 2 while our skewed index is at 4 and our skew is 2\n\t\t\t//\n\t\t\t// this becomes an optimization question where currently we see a 1 element offset as an insertion\n\t\t\t// or deletion i.e. we optimize for [0, 1, 2] --> [9, 0, 1, 2]\n\t\t\t// while a more than 1 offset we see as a swap.\n\t\t\t// We could probably build heuristics for having an optimized course of action here as well, but\n\t\t\t// might go at the cost of some bytes.\n\t\t\t//\n\t\t\t// If we wanted to optimize for i.e. only swaps we'd just do the last two code-branches and have\n\t\t\t// only the first item be a re-scouting and all the others fall in their skewed counter-part.\n\t\t\t// We could also further optimize for swaps\n\t\t\tif (matchingIndex == skewedIndex - 1) {\n\t\t\t\tskew--;\n\t\t\t} else if (matchingIndex == skewedIndex + 1) {\n\t\t\t\tskew++;\n\t\t\t} else {\n\t\t\t\tif (matchingIndex > skewedIndex) {\n\t\t\t\t\tskew--;\n\t\t\t\t} else {\n\t\t\t\t\tskew++;\n\t\t\t\t}\n\n\t\t\t\t// Move this VNode's DOM if the original index (matchingIndex) doesn't\n\t\t\t\t// match the new skew index (i + new skew)\n\t\t\t\t// In the former two branches we know that it matches after skewing\n\t\t\t\tchildVNode._flags |= INSERT_VNODE;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Remove remaining oldChildren if there are any. Loop forwards so that as we\n\t// unmount DOM from the beginning of the oldChildren, we can adjust oldDom to\n\t// point to the next child, which needs to be the first DOM node that won't be\n\t// unmounted.\n\tif (remainingOldChildren) {\n\t\tfor (i = 0; i < oldChildrenLength; i++) {\n\t\t\toldVNode = oldChildren[i];\n\t\t\tif (oldVNode != null && (oldVNode._flags & MATCHED) == 0) {\n\t\t\t\tif (oldVNode._dom == oldDom) {\n\t\t\t\t\toldDom = getDomSibling(oldVNode);\n\t\t\t\t}\n\n\t\t\t\tunmount(oldVNode, oldVNode);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {VNode} parentVNode\n * @param {PreactElement} oldDom\n * @param {PreactElement} parentDom\n * @returns {PreactElement}\n */\nfunction insert(parentVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\n\tif (typeof parentVNode.type == 'function') {\n\t\tlet children = parentVNode._children;\n\t\tfor (let i = 0; children && i < children.length; i++) {\n\t\t\tif (children[i]) {\n\t\t\t\t// If we enter this code path on sCU bailout, where we copy\n\t\t\t\t// oldVNode._children to newVNode._children, we need to update the old\n\t\t\t\t// children's _parent pointer to point to the newVNode (parentVNode\n\t\t\t\t// here).\n\t\t\t\tchildren[i]._parent = parentVNode;\n\t\t\t\toldDom = insert(children[i], oldDom, parentDom);\n\t\t\t}\n\t\t}\n\n\t\treturn oldDom;\n\t} else if (parentVNode._dom != oldDom) {\n\t\tif (oldDom && parentVNode.type && !parentDom.contains(oldDom)) {\n\t\t\toldDom = getDomSibling(parentVNode);\n\t\t}\n\t\tparentDom.insertBefore(parentVNode._dom, oldDom || null);\n\t\toldDom = parentVNode._dom;\n\t}\n\n\tdo {\n\t\toldDom = oldDom && oldDom.nextSibling;\n\t} while (oldDom != null && oldDom.nodeType == 8);\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {ComponentChildren} children The unflattened children of a virtual\n * node\n * @returns {VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\n/**\n * @param {VNode} childVNode\n * @param {VNode[]} oldChildren\n * @param {number} skewedIndex\n * @param {number} remainingOldChildren\n * @returns {number}\n */\nfunction findMatchingIndex(\n\tchildVNode,\n\toldChildren,\n\tskewedIndex,\n\tremainingOldChildren\n) {\n\tconst key = childVNode.key;\n\tconst type = childVNode.type;\n\tlet oldVNode = oldChildren[skewedIndex];\n\n\t// We only need to perform a search if there are more children\n\t// (remainingOldChildren) to search. However, if the oldVNode we just looked\n\t// at skewedIndex was not already used in this diff, then there must be at\n\t// least 1 other (so greater than 1) remainingOldChildren to attempt to match\n\t// against. So the following condition checks that ensuring\n\t// remainingOldChildren > 1 if the oldVNode is not already used/matched. Else\n\t// if the oldVNode was null or matched, then there could needs to be at least\n\t// 1 (aka `remainingOldChildren > 0`) children to find and compare against.\n\t//\n\t// If there is an unkeyed functional VNode, that isn't a built-in like our Fragment,\n\t// we should not search as we risk re-using state of an unrelated VNode. (reverted for now)\n\tlet shouldSearch =\n\t\t// (typeof type != 'function' || type === Fragment || key) &&\n\t\tremainingOldChildren >\n\t\t(oldVNode != null && (oldVNode._flags & MATCHED) == 0 ? 1 : 0);\n\n\tif (\n\t\toldVNode === null ||\n\t\t(oldVNode &&\n\t\t\tkey == oldVNode.key &&\n\t\t\ttype === oldVNode.type &&\n\t\t\t(oldVNode._flags & MATCHED) == 0)\n\t) {\n\t\treturn skewedIndex;\n\t} else if (shouldSearch) {\n\t\tlet x = skewedIndex - 1;\n\t\tlet y = skewedIndex + 1;\n\t\twhile (x >= 0 || y < oldChildren.length) {\n\t\t\tif (x >= 0) {\n\t\t\t\toldVNode = oldChildren[x];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn x;\n\t\t\t\t}\n\t\t\t\tx--;\n\t\t\t}\n\n\t\t\tif (y < oldChildren.length) {\n\t\t\t\toldVNode = oldChildren[y];\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\t(oldVNode._flags & MATCHED) == 0 &&\n\t\t\t\t\tkey == oldVNode.key &&\n\t\t\t\t\ttype === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\treturn y;\n\t\t\t\t}\n\t\t\t\ty++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn -1;\n}\n", "import {\n\tEMPTY_OBJ,\n\tMATH_NAMESPACE,\n\tMODE_HYDRATE,\n\tMODE_SUSPENDED,\n\tRESET_MODE,\n\tSVG_NAMESPACE,\n\tUNDEFINED,\n\tXHTML_NAMESPACE\n} from '../constants';\nimport { BaseComponent, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { setProperty } from './props';\nimport { assign, isArray, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * @typedef {import('../internal').ComponentChildren} ComponentChildren\n * @typedef {import('../internal').Component} Component\n * @typedef {import('../internal').PreactElement} PreactElement\n * @typedef {import('../internal').VNode} VNode\n */\n\n/**\n * @template {any} T\n * @typedef {import('../internal').Ref<T>} Ref<T>\n */\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {PreactElement} parentDom The parent of the DOM element\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by\n * getChildContext\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {PreactElement} oldDom The current attached DOM element any new dom\n * elements should be placed around. Likely `null` on first render (except when\n * hydrating). Can be a sibling DOM element when diffing Fragments that have\n * siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating,\n\trefQueue\n) {\n\t/** @type {any} */\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== UNDEFINED) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._flags & MODE_SUSPENDED) {\n\t\tisHydrating = !!(oldVNode._flags & MODE_HYDRATE);\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\touter: if (typeof newType == 'function') {\n\t\ttry {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\t\t\tconst isClassComponent =\n\t\t\t\t'prototype' in newType && newType.prototype.render;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif (isClassComponent) {\n\t\t\t\t\t// @ts-expect-error The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-expect-error Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new BaseComponent(\n\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (isClassComponent && c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (isClassComponent && newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tisClassComponent &&\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t!c._force &&\n\t\t\t\t\t((c.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\t\tnewVNode._original == oldVNode._original)\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original != oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.some(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (isClassComponent && c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\t\t\tc._force = false;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif (isClassComponent) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (isClassComponent && !isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\toldDom = diffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tisArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnamespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._flags &= RESET_MODE;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tnewVNode._original = null;\n\t\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\t\tif (e.then) {\n\t\t\t\t\tnewVNode._flags |= isHydrating\n\t\t\t\t\t\t? MODE_HYDRATE | MODE_SUSPENDED\n\t\t\t\t\t\t: MODE_SUSPENDED;\n\n\t\t\t\t\twhile (oldDom && oldDom.nodeType == 8 && oldDom.nextSibling) {\n\t\t\t\t\t\toldDom = oldDom.nextSibling;\n\t\t\t\t\t}\n\n\t\t\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t\t\tnewVNode._dom = oldDom;\n\t\t\t\t} else {\n\t\t\t\t\tfor (let i = excessDomChildren.length; i--; ) {\n\t\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t}\n\t\t\toptions._catchError(e, newVNode, oldVNode);\n\t\t}\n\t} else if (\n\t\texcessDomChildren == null &&\n\t\tnewVNode._original == oldVNode._original\n\t) {\n\t\tnewVNode._children = oldVNode._children;\n\t\tnewVNode._dom = oldVNode._dom;\n\t} else {\n\t\toldDom = newVNode._dom = diffElementNodes(\n\t\t\toldVNode._dom,\n\t\t\tnewVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tnamespace,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\tisHydrating,\n\t\t\trefQueue\n\t\t);\n\t}\n\n\tif ((tmp = options.diffed)) tmp(newVNode);\n\n\treturn newVNode._flags & MODE_SUSPENDED ? undefined : oldDom;\n}\n\n/**\n * @param {Array<Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {VNode} root\n */\nexport function commitRoot(commitQueue, root, refQueue) {\n\tfor (let i = 0; i < refQueue.length; i++) {\n\t\tapplyRef(refQueue[i], refQueue[++i], refQueue[++i]);\n\t}\n\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-expect-error Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-expect-error See above comment on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {PreactElement} dom The DOM element representing the virtual nodes\n * being diffed\n * @param {VNode} newVNode The new virtual node\n * @param {VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {string} namespace Current namespace of the DOM node (HTML, SVG, or MathML)\n * @param {Array<PreactElement>} excessDomChildren\n * @param {Array<Component>} commitQueue List of components which have callbacks\n * to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @param {any[]} refQueue an array of elements needed to invoke refs\n * @returns {PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tnamespace,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating,\n\trefQueue\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = /** @type {string} */ (newVNode.type);\n\t/** @type {any} */\n\tlet i;\n\t/** @type {{ __html?: string }} */\n\tlet newHtml;\n\t/** @type {{ __html?: string }} */\n\tlet oldHtml;\n\t/** @type {ComponentChildren} */\n\tlet newChildren;\n\tlet value;\n\tlet inputValue;\n\tlet checked;\n\n\t// Tracks entering and exiting namespaces when descending through the tree.\n\tif (nodeType == 'svg') namespace = SVG_NAMESPACE;\n\telse if (nodeType == 'math') namespace = MATH_NAMESPACE;\n\telse if (!namespace) namespace = XHTML_NAMESPACE;\n\n\tif (excessDomChildren != null) {\n\t\tfor (i = 0; i < excessDomChildren.length; i++) {\n\t\t\tvalue = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tvalue &&\n\t\t\t\t'setAttribute' in value == !!nodeType &&\n\t\t\t\t(nodeType ? value.localName == nodeType : value.nodeType == 3)\n\t\t\t) {\n\t\t\t\tdom = value;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType == null) {\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tdom = document.createElementNS(\n\t\t\tnamespace,\n\t\t\tnodeType,\n\t\t\tnewProps.is && newProps\n\t\t);\n\n\t\t// we are creating a new node, so we can assume this is a new subtree (in\n\t\t// case we are hydrating), this deopts the hydrate\n\t\tif (isHydrating) {\n\t\t\tif (options._hydrationMismatch)\n\t\t\t\toptions._hydrationMismatch(newVNode, excessDomChildren);\n\t\t\tisHydrating = false;\n\t\t}\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\t// If we are in a situation where we are not hydrating but are using\n\t\t// existing DOM (e.g. replaceNode) we should read the existing DOM\n\t\t// attributes to diff them\n\t\tif (!isHydrating && excessDomChildren != null) {\n\t\t\toldProps = {};\n\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\tvalue = dom.attributes[i];\n\t\t\t\toldProps[value.name] = value.value;\n\t\t\t}\n\t\t}\n\n\t\tfor (i in oldProps) {\n\t\t\tvalue = oldProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\toldHtml = value;\n\t\t\t} else if (!(i in newProps)) {\n\t\t\t\tif (\n\t\t\t\t\t(i == 'value' && 'defaultValue' in newProps) ||\n\t\t\t\t\t(i == 'checked' && 'defaultChecked' in newProps)\n\t\t\t\t) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tsetProperty(dom, i, null, value, namespace);\n\t\t\t}\n\t\t}\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tfor (i in newProps) {\n\t\t\tvalue = newProps[i];\n\t\t\tif (i == 'children') {\n\t\t\t\tnewChildren = value;\n\t\t\t} else if (i == 'dangerouslySetInnerHTML') {\n\t\t\t\tnewHtml = value;\n\t\t\t} else if (i == 'value') {\n\t\t\t\tinputValue = value;\n\t\t\t} else if (i == 'checked') {\n\t\t\t\tchecked = value;\n\t\t\t} else if (\n\t\t\t\t(!isHydrating || typeof value == 'function') &&\n\t\t\t\toldProps[i] !== value\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, value, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\tif (\n\t\t\t\t!isHydrating &&\n\t\t\t\t(!oldHtml ||\n\t\t\t\t\t(newHtml.__html !== oldHtml.__html &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML))\n\t\t\t) {\n\t\t\t\tdom.innerHTML = newHtml.__html;\n\t\t\t}\n\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\tif (oldHtml) dom.innerHTML = '';\n\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tisArray(newChildren) ? newChildren : [newChildren],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tnodeType == 'foreignObject' ? XHTML_NAMESPACE : namespace,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating,\n\t\t\t\trefQueue\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tremoveNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// As above, don't diff props during hydration\n\t\tif (!isHydrating) {\n\t\t\ti = 'value';\n\t\t\tif (nodeType == 'progress' && inputValue == null) {\n\t\t\t\tdom.removeAttribute('value');\n\t\t\t} else if (\n\t\t\t\tinputValue !== UNDEFINED &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(inputValue !== dom[i] ||\n\t\t\t\t\t(nodeType == 'progress' && !inputValue) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType == 'option' && inputValue !== oldProps[i]))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, i, inputValue, oldProps[i], namespace);\n\t\t\t}\n\n\t\t\ti = 'checked';\n\t\t\tif (checked !== UNDEFINED && checked !== dom[i]) {\n\t\t\t\tsetProperty(dom, i, checked, oldProps[i], namespace);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {Ref<any> & { _unmount?: unknown }} ref\n * @param {any} value\n * @param {VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') {\n\t\t\tlet hasRefUnmount = typeof ref._unmount == 'function';\n\t\t\tif (hasRefUnmount) {\n\t\t\t\t// @ts-ignore TS doesn't like moving narrowing checks into variables\n\t\t\t\tref._unmount();\n\t\t\t}\n\n\t\t\tif (!hasRefUnmount || value != null) {\n\t\t\t\t// Store the cleanup function on the function\n\t\t\t\t// instance object itself to avoid shape\n\t\t\t\t// transitioning vnode\n\t\t\t\tref._unmount = ref(value);\n\t\t\t}\n\t\t} else ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {VNode} vnode The virtual node to unmount\n * @param {VNode} parentVNode The parent of the VNode that initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type != 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\tvnode._component = vnode._parent = vnode._dom = UNDEFINED;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\t// https://github.com/preactjs/preact/issues/3794\n\tif (parentDom == document) {\n\t\tparentDom = document.documentElement;\n\t}\n\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode == 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = ((!isHydrating && replaceNode) || parentDom)._children =\n\t\tcreateElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [],\n\t\trefQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.namespaceURI,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t\t? null\n\t\t\t\t: parentDom.firstChild\n\t\t\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t\t? oldVNode._dom\n\t\t\t\t: parentDom.firstChild,\n\t\tisHydrating,\n\t\trefQueue\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode, refQueue);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\nimport { UNDEFINED } from './constants';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its\n * children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used\n * as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\n\tlet defaultProps;\n\n\tif (vnode.type && vnode.type.defaultProps) {\n\t\tdefaultProps = vnode.type.defaultProps;\n\t}\n\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse if (props[i] === UNDEFINED && defaultProps !== UNDEFINED) {\n\t\t\tnormalizedProps[i] = defaultProps[i];\n\t\t} else {\n\t\t\tnormalizedProps[i] = props[i];\n\t\t}\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw the error that was caught (except\n * for unmounting when this parameter is the highest parent that was being\n * unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component,\n\t\t/** @type {import('../internal').ComponentType} */\n\t\tctor,\n\t\t/** @type {boolean} */\n\t\thandled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "const ENCODED_ENTITIES = /[\"&<]/;\n\n/** @param {string} str */\nexport function encodeEntities(str) {\n\t// Skip all work for strings with no entities needing encoding:\n\tif (str.length === 0 || ENCODED_ENTITIES.test(str) === false) return str;\n\n\tlet last = 0,\n\t\ti = 0,\n\t\tout = '',\n\t\tch = '';\n\n\t// Seek forward in str until the next entity char:\n\tfor (; i < str.length; i++) {\n\t\tswitch (str.charCodeAt(i)) {\n\t\t\tcase 34:\n\t\t\t\tch = '&quot;';\n\t\t\t\tbreak;\n\t\t\tcase 38:\n\t\t\t\tch = '&amp;';\n\t\t\t\tbreak;\n\t\t\tcase 60:\n\t\t\t\tch = '&lt;';\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tcontinue;\n\t\t}\n\t\t// Append skipped/buffered characters and the encoded entity:\n\t\tif (i !== last) out += str.slice(last, i);\n\t\tout += ch;\n\t\t// Start the next seek/buffer after the entity's offset:\n\t\tlast = i + 1;\n\t}\n\tif (i !== last) out += str.slice(last, i);\n\treturn out;\n}\n", "/** Normal hydration that attaches to a DOM tree but does not diff it. */\nexport const MODE_HYDRATE = 1 << 5;\n/** Signifies this VNode suspended on the previous render */\nexport const MODE_SUSPENDED = 1 << 7;\n/** Indicates that this node needs to be inserted while patching children */\nexport const INSERT_VNODE = 1 << 2;\n/** Indicates a VNode has been matched with another VNode in the diff */\nexport const MATCHED = 1 << 1;\n\n/** Reset all mode flags */\nexport const RESET_MODE = ~(MODE_HYDRATE | MODE_SUSPENDED);\n\nexport const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\nexport const XHTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\nexport const MATH_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n\nexport const UNDEFINED = undefined;\nexport const EMPTY_OBJ = /** @type {any} */ ({});\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL =\n\t/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { options, Fragment } from 'preact';\nimport { encodeEntities } from './utils';\nimport { IS_NON_DIMENSIONAL } from '../../src/constants';\n\nlet vnodeId = 0;\n\nconst isArray = Array.isArray;\n\n/**\n * @fileoverview\n * This file exports various methods that implement Babel's \"automatic\" JSX runtime API:\n * - jsx(type, props, key)\n * - jsxs(type, props, key)\n * - jsxDEV(type, props, key, __source, __self)\n *\n * The implementation of createVNode here is optimized for performance.\n * Benchmarks: https://esbench.com/bench/5f6b54a0b4632100a7dcd2b3\n */\n\n/**\n * JSX.Element factory used by Babel's {runtime:\"automatic\"} JSX transform\n * @param {VNode['type']} type\n * @param {VNode['props']} props\n * @param {VNode['key']} [key]\n * @param {unknown} [isStaticChildren]\n * @param {unknown} [__source]\n * @param {unknown} [__self]\n */\nfunction createVNode(type, props, key, isStaticChildren, __source, __self) {\n\tif (!props) props = {};\n\t// We'll want to preserve `ref` in props to get rid of the need for\n\t// forwardRef components in the future, but that should happen via\n\t// a separate PR.\n\tlet normalizedProps = props,\n\t\tref,\n\t\ti;\n\n\tif ('ref' in normalizedProps) {\n\t\tnormalizedProps = {};\n\t\tfor (i in props) {\n\t\t\tif (i == 'ref') {\n\t\t\t\tref = props[i];\n\t\t\t} else {\n\t\t\t\tnormalizedProps[i] = props[i];\n\t\t\t}\n\t\t}\n\t}\n\n\t/** @type {VNode & { __source: any; __self: any }} */\n\tconst vnode = {\n\t\ttype,\n\t\tprops: normalizedProps,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t_component: null,\n\t\tconstructor: undefined,\n\t\t_original: --vnodeId,\n\t\t_index: -1,\n\t\t_flags: 0,\n\t\t__source,\n\t\t__self\n\t};\n\n\t// If a Component VNode, check for and apply defaultProps.\n\t// Note: `type` is often a String, and can be `undefined` in development.\n\tif (typeof type === 'function' && (ref = type.defaultProps)) {\n\t\tfor (i in ref)\n\t\t\tif (typeof normalizedProps[i] === 'undefined') {\n\t\t\t\tnormalizedProps[i] = ref[i];\n\t\t\t}\n\t}\n\n\tif (options.vnode) options.vnode(vnode);\n\treturn vnode;\n}\n\n/**\n * Create a template vnode. This function is not expected to be\n * used directly, but rather through a precompile JSX transform\n * @param {string[]} templates\n * @param  {Array<string | null | VNode>} exprs\n * @returns {VNode}\n */\nfunction jsxTemplate(templates, ...exprs) {\n\tconst vnode = createVNode(Fragment, { tpl: templates, exprs });\n\t// Bypass render to string top level Fragment optimization\n\tvnode.key = vnode._vnode;\n\treturn vnode;\n}\n\nconst JS_TO_CSS = {};\nconst CSS_REGEX = /[A-Z]/g;\n\n/**\n * Serialize an HTML attribute to a string. This function is not\n * expected to be used directly, but rather through a precompile\n * JSX transform\n * @param {string} name The attribute name\n * @param {*} value The attribute value\n * @returns {string}\n */\nfunction jsxAttr(name, value) {\n\tif (options.attr) {\n\t\tconst result = options.attr(name, value);\n\t\tif (typeof result === 'string') return result;\n\t}\n\n\tif (name === 'ref' || name === 'key') return '';\n\tif (name === 'style' && typeof value === 'object') {\n\t\tlet str = '';\n\t\tfor (let prop in value) {\n\t\t\tlet val = value[prop];\n\t\t\tif (val != null && val !== '') {\n\t\t\t\tconst name =\n\t\t\t\t\tprop[0] == '-'\n\t\t\t\t\t\t? prop\n\t\t\t\t\t\t: JS_TO_CSS[prop] ||\n\t\t\t\t\t\t\t(JS_TO_CSS[prop] = prop.replace(CSS_REGEX, '-$&').toLowerCase());\n\n\t\t\t\tlet suffix = ';';\n\t\t\t\tif (\n\t\t\t\t\ttypeof val === 'number' &&\n\t\t\t\t\t// Exclude custom-attributes\n\t\t\t\t\t!name.startsWith('--') &&\n\t\t\t\t\t!IS_NON_DIMENSIONAL.test(name)\n\t\t\t\t) {\n\t\t\t\t\tsuffix = 'px;';\n\t\t\t\t}\n\t\t\t\tstr = str + name + ':' + val + suffix;\n\t\t\t}\n\t\t}\n\t\treturn name + '=\"' + str + '\"';\n\t}\n\n\tif (\n\t\tvalue == null ||\n\t\tvalue === false ||\n\t\ttypeof value === 'function' ||\n\t\ttypeof value === 'object'\n\t) {\n\t\treturn '';\n\t} else if (value === true) return name;\n\n\treturn name + '=\"' + encodeEntities(value) + '\"';\n}\n\n/**\n * Escape a dynamic child passed to `jsxTemplate`. This function\n * is not expected to be used directly, but rather through a\n * precompile JSX transform\n * @param {*} value\n * @returns {string | null | VNode | Array<string | null | VNode>}\n */\nfunction jsxEscape(value) {\n\tif (\n\t\tvalue == null ||\n\t\ttypeof value === 'boolean' ||\n\t\ttypeof value === 'function'\n\t) {\n\t\treturn null;\n\t}\n\n\tif (typeof value === 'object') {\n\t\t// Check for VNode\n\t\tif (value.constructor === undefined) return value;\n\n\t\tif (isArray(value)) {\n\t\t\tfor (let i = 0; i < value.length; i++) {\n\t\t\t\tvalue[i] = jsxEscape(value[i]);\n\t\t\t}\n\t\t\treturn value;\n\t\t}\n\t}\n\n\treturn encodeEntities('' + value);\n}\n\nexport {\n\tcreateVNode as jsx,\n\tcreateVNode as jsxs,\n\tcreateVNode as jsxDEV,\n\tFragment,\n\t// precompiled JSX transform\n\tjsxTemplate,\n\tjsxAttr,\n\tjsxEscape\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\nexport const IconButton = props => {\n  const {className, label, onClick} = props;\n  return (\n    <div className=\"deck-widget-button\">\n      <button\n        className={`deck-widget-icon-button ${className}`}\n        type=\"button\"\n        onClick={onClick}\n        title={label}\n      >\n        <div className=\"deck-widget-icon\" />\n      </button>\n    </div>\n  );\n};\n\nexport const ButtonGroup = props => {\n  const {children, orientation} = props;\n  return <div className={`deck-widget-button-group ${orientation}`}>{children}</div>;\n};\n\nexport const GroupedIconButton = props => {\n  const {className, label, onClick} = props;\n  return (\n    <button\n      className={`deck-widget-icon-button ${className}`}\n      type=\"button\"\n      onClick={onClick}\n      title={label}\n    >\n      <div className=\"deck-widget-icon\" />\n    </button>\n  );\n};\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {\n  _deepEqual as deepEqual,\n  _applyStyles as applyStyles,\n  _removeStyles as removeStyles\n} from '@deck.gl/core';\nimport type {Deck, Widget, WidgetPlacement} from '@deck.gl/core';\nimport {render} from 'preact';\nimport {IconButton} from './components';\n\nexport type FullscreenWidgetProps = {\n  id?: string;\n  /**\n   * Widget positioning within the view. Default 'top-left'.\n   */\n  placement?: WidgetPlacement;\n  /**\n   * A [compatible DOM element](https://developer.mozilla.org/en-US/docs/Web/API/Element/requestFullScreen#Compatible_elements) which should be made full screen.\n   * By default, the map container element will be made full screen.\n   */\n  /* eslint-enable max-len */\n  container?: HTMLElement;\n  /**\n   * Tooltip message when out of fullscreen.\n   */\n  enterLabel?: string;\n  /**\n   * Tooltip message when fullscreen.\n   */\n  exitLabel?: string;\n  /**\n   * CSS inline style overrides.\n   */\n  style?: Partial<CSSStyleDeclaration>;\n  /**\n   * Additional CSS class.\n   */\n  className?: string;\n};\n\nexport class FullscreenWidget implements Widget<FullscreenWidgetProps> {\n  id = 'fullscreen';\n  props: FullscreenWidgetProps;\n  placement: WidgetPlacement = 'top-left';\n\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n\n  fullscreen: boolean = false;\n\n  constructor(props: FullscreenWidgetProps) {\n    this.id = props.id ?? this.id;\n    this.placement = props.placement ?? this.placement;\n\n    this.props = {\n      ...props,\n      enterLabel: props.enterLabel ?? 'Enter Fullscreen',\n      exitLabel: props.exitLabel ?? 'Exit Fullscreen',\n      style: props.style ?? {}\n    };\n  }\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const {style, className} = this.props;\n    const el = document.createElement('div');\n    el.classList.add('deck-widget', 'deck-widget-fullscreen');\n    if (className) el.classList.add(className);\n    applyStyles(el, style);\n    this.deck = deck;\n    this.element = el;\n    this.update();\n    document.addEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\n    return el;\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n    document.removeEventListener('fullscreenchange', this.onFullscreenChange.bind(this));\n  }\n\n  private update() {\n    const {enterLabel, exitLabel} = this.props;\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n\n    const ui = (\n      <IconButton\n        onClick={this.handleClick.bind(this)}\n        label={this.fullscreen ? exitLabel : enterLabel}\n        className={this.fullscreen ? 'deck-widget-fullscreen-exit' : 'deck-widget-fullscreen-enter'}\n      />\n    );\n    render(ui, element);\n  }\n\n  setProps(props: Partial<FullscreenWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n\n      if (!deepEqual(oldProps.style, props.style, 1)) {\n        removeStyles(el, oldProps.style);\n        applyStyles(el, props.style);\n      }\n    }\n\n    Object.assign(this.props, props);\n    this.update();\n  }\n\n  getContainer() {\n    return this.props.container || this.deck?.getCanvas()?.parentElement;\n  }\n\n  onFullscreenChange() {\n    const prevFullscreen = this.fullscreen;\n    const fullscreen = document.fullscreenElement === this.getContainer();\n    if (prevFullscreen !== fullscreen) {\n      this.fullscreen = !this.fullscreen;\n    }\n    this.update();\n  }\n\n  async handleClick() {\n    if (this.fullscreen) {\n      await this.exitFullscreen();\n    } else {\n      await this.requestFullscreen();\n    }\n    this.update();\n  }\n\n  async requestFullscreen() {\n    const container = this.getContainer();\n    if (container?.requestFullscreen) {\n      await container.requestFullscreen({navigationUI: 'hide'});\n    } else {\n      this.togglePseudoFullscreen();\n    }\n  }\n\n  async exitFullscreen() {\n    if (document.exitFullscreen) {\n      await document.exitFullscreen();\n    } else {\n      this.togglePseudoFullscreen();\n    }\n  }\n\n  togglePseudoFullscreen() {\n    this.getContainer()?.classList.toggle('deck-pseudo-fullscreen');\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {\n  FlyToInterpolator,\n  WebMercatorViewport,\n  _GlobeViewport,\n  _deepEqual as deepEqual,\n  _applyStyles as applyStyles,\n  _removeStyles as removeStyles\n} from '@deck.gl/core';\nimport type {Deck, Viewport, Widget, WidgetPlacement} from '@deck.gl/core';\nimport {render} from 'preact';\n\nexport type CompassWidgetProps = {\n  id?: string;\n  /**\n   * Widget positioning within the view. Default 'top-left'.\n   */\n  placement?: WidgetPlacement;\n  /**\n   * View to attach to and interact with. Required when using multiple views.\n   */\n  viewId?: string | null;\n  /**\n   * Tooltip message.\n   */\n  label?: string;\n  /**\n   * Bearing and pitch reset transition duration in ms.\n   */\n  transitionDuration?: number;\n  /**\n   * CSS inline style overrides.\n   */\n  style?: Partial<CSSStyleDeclaration>;\n  /**\n   * Additional CSS class.\n   */\n  className?: string;\n};\n\nexport class CompassWidget implements Widget<CompassWidgetProps> {\n  id = 'compass';\n  props: CompassWidgetProps;\n  placement: WidgetPlacement = 'top-left';\n  viewId?: string | null = null;\n  viewports: {[id: string]: Viewport} = {};\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n\n  constructor(props: CompassWidgetProps) {\n    this.id = props.id ?? this.id;\n    this.viewId = props.viewId ?? this.viewId;\n    this.placement = props.placement ?? this.placement;\n\n    this.props = {\n      ...props,\n      transitionDuration: props.transitionDuration ?? 200,\n      label: props.label ?? 'Reset Compass',\n      style: props.style ?? {}\n    };\n  }\n\n  setProps(props: Partial<CompassWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    this.viewId = props.viewId ?? this.viewId;\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n\n      if (!deepEqual(oldProps.style, props.style, 1)) {\n        removeStyles(el, oldProps.style);\n        applyStyles(el, props.style);\n      }\n    }\n\n    Object.assign(this.props, props);\n    this.update();\n  }\n\n  onViewportChange(viewport: Viewport) {\n    // no need to update if viewport is the same\n    if (!viewport.equals(this.viewports[viewport.id])) {\n      this.viewports[viewport.id] = viewport;\n      this.update();\n    }\n  }\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const {style, className} = this.props;\n    const element = document.createElement('div');\n    element.classList.add('deck-widget', 'deck-widget-compass');\n    if (className) element.classList.add(className);\n    applyStyles(element, style);\n    this.deck = deck;\n    this.element = element;\n    this.update();\n    return element;\n  }\n\n  getRotation(viewport?: Viewport) {\n    if (viewport instanceof WebMercatorViewport) {\n      return [-viewport.bearing, viewport.pitch];\n    } else if (viewport instanceof _GlobeViewport) {\n      return [0, Math.max(-80, Math.min(80, viewport.latitude))];\n    }\n    return [0, 0];\n  }\n\n  private update() {\n    const viewId = this.viewId || Object.values(this.viewports)[0]?.id || 'default-view';\n    const viewport = this.viewports[viewId];\n    const [rz, rx] = this.getRotation(viewport);\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n    const ui = (\n      <div className=\"deck-widget-button\" style={{perspective: 100}}>\n        <button\n          type=\"button\"\n          onClick={() => {\n            for (const viewport of Object.values(this.viewports)) {\n              this.handleCompassReset(viewport);\n            }\n          }}\n          title={this.props.label}\n          style={{transform: `rotateX(${rx}deg)`}}\n        >\n          <svg fill=\"none\" width=\"100%\" height=\"100%\" viewBox=\"0 0 26 26\">\n            <g transform={`rotate(${rz},13,13)`}>\n              <path\n                d=\"M10 13.0001L12.9999 5L15.9997 13.0001H10Z\"\n                fill=\"var(--icon-compass-north-color, #F05C44)\"\n              />\n              <path\n                d=\"M16.0002 12.9999L13.0004 21L10.0005 12.9999H16.0002Z\"\n                fill=\"var(--icon-compass-south-color, #C2C2CC)\"\n              />\n            </g>\n          </svg>\n        </button>\n      </div>\n    );\n    render(ui, element);\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n\n  handleCompassReset(viewport: Viewport) {\n    const viewId = this.viewId || viewport.id || 'default-view';\n    if (viewport instanceof WebMercatorViewport) {\n      const nextViewState = {\n        ...viewport,\n        bearing: 0,\n        ...(this.getRotation(viewport)[0] === 0 ? {pitch: 0} : {}),\n        transitionDuration: this.props.transitionDuration,\n        transitionInterpolator: new FlyToInterpolator()\n      };\n      // @ts-ignore Using private method temporary until there's a public one\n      this.deck._onViewStateChange({viewId, viewState: nextViewState, interactionState: {}});\n    }\n  }\n}\n", "// deck.gl\n// SPDX-License-Identifier: MIT\n// Copyright (c) vis.gl contributors\n\n/* global document */\nimport {\n  FlyToInterpolator,\n  _deepEqual as deepEqual,\n  _applyStyles as applyStyles,\n  _removeStyles as removeStyles\n} from '@deck.gl/core';\nimport type {Deck, Viewport, Widget, WidgetPlacement} from '@deck.gl/core';\nimport {render} from 'preact';\nimport {ButtonGroup, GroupedIconButton} from './components';\n\nexport type ZoomWidgetProps = {\n  id?: string;\n  /**\n   * Widget positioning within the view. Default 'top-left'.\n   */\n  placement?: WidgetPlacement;\n  /**\n   * View to attach to and interact with. Required when using multiple views.\n   */\n  viewId?: string | null;\n  /**\n   * Button orientation.\n   */\n  orientation?: 'vertical' | 'horizontal';\n  /**\n   * Tooltip message on zoom in button.\n   */\n  zoomInLabel?: string;\n  /**\n   * Tooltip message on zoom out button.\n   */\n  zoomOutLabel?: string;\n  /**\n   * Zoom transition duration in ms.\n   */\n  transitionDuration?: number;\n  /**\n   * CSS inline style overrides.\n   */\n  style?: Partial<CSSStyleDeclaration>;\n  /**\n   * Additional CSS class.\n   */\n  className?: string;\n};\n\nexport class ZoomWidget implements Widget<ZoomWidgetProps> {\n  id = 'zoom';\n  props: ZoomWidgetProps;\n  placement: WidgetPlacement = 'top-left';\n  viewId?: string | null = null;\n  viewports: {[id: string]: Viewport} = {};\n  deck?: Deck<any>;\n  element?: HTMLDivElement;\n\n  constructor(props: ZoomWidgetProps) {\n    this.id = props.id ?? this.id;\n    this.viewId = props.viewId ?? this.viewId;\n    this.placement = props.placement ?? this.placement;\n\n    this.props = {\n      ...props,\n      orientation: props.orientation ?? 'vertical',\n      transitionDuration: props.transitionDuration ?? 200,\n      zoomInLabel: props.zoomInLabel ?? 'Zoom In',\n      zoomOutLabel: props.zoomOutLabel ?? 'Zoom Out',\n      style: props.style ?? {}\n    };\n  }\n\n  onAdd({deck}: {deck: Deck<any>}): HTMLDivElement {\n    const {style, className} = this.props;\n    const element = document.createElement('div');\n    element.classList.add('deck-widget', 'deck-widget-zoom');\n    if (className) element.classList.add(className);\n    applyStyles(element, style);\n    this.deck = deck;\n    this.element = element;\n    this.update();\n    return element;\n  }\n\n  onRemove() {\n    this.deck = undefined;\n    this.element = undefined;\n  }\n\n  setProps(props: Partial<ZoomWidgetProps>) {\n    this.placement = props.placement ?? this.placement;\n    this.viewId = props.viewId ?? this.viewId;\n    const oldProps = this.props;\n    const el = this.element;\n    if (el) {\n      if (oldProps.className !== props.className) {\n        if (oldProps.className) el.classList.remove(oldProps.className);\n        if (props.className) el.classList.add(props.className);\n      }\n\n      if (!deepEqual(oldProps.style, props.style, 1)) {\n        removeStyles(el, oldProps.style);\n        applyStyles(el, props.style);\n      }\n    }\n\n    Object.assign(this.props, props);\n    this.update();\n  }\n\n  onViewportChange(viewport: Viewport) {\n    this.viewports[viewport.id] = viewport;\n  }\n\n  handleZoom(viewport: Viewport, nextZoom: number) {\n    const viewId = this.viewId || viewport?.id || 'default-view';\n    const nextViewState = {\n      ...viewport,\n      zoom: nextZoom,\n      transitionDuration: this.props.transitionDuration,\n      transitionInterpolator: new FlyToInterpolator()\n    };\n    // @ts-ignore Using private method temporary until there's a public one\n    this.deck._onViewStateChange({viewId, viewState: nextViewState, interactionState: {}});\n  }\n\n  handleZoomIn() {\n    for (const viewport of Object.values(this.viewports)) {\n      this.handleZoom(viewport, viewport.zoom + 1);\n    }\n  }\n\n  handleZoomOut() {\n    for (const viewport of Object.values(this.viewports)) {\n      this.handleZoom(viewport, viewport.zoom - 1);\n    }\n  }\n\n  private update() {\n    const element = this.element;\n    if (!element) {\n      return;\n    }\n    const ui = (\n      <ButtonGroup orientation={this.props.orientation}>\n        <GroupedIconButton\n          onClick={() => this.handleZoomIn()}\n          label={this.props.zoomInLabel}\n          className=\"deck-widget-zoom-in\"\n        />\n        <GroupedIconButton\n          onClick={() => this.handleZoomOut()}\n          label={this.props.zoomOutLabel}\n          className=\"deck-widget-zoom-out\"\n        />\n      </ButtonGroup>\n    );\n    render(ui, element);\n  }\n}\n", "import {useContext, useMemo, useEffect} from 'react';\nimport {DeckGlContext} from './deckgl-context';\nimport {log, type Widget, _deepEqual as deepEqual} from '@deck.gl/core';\n\nexport function useWidget<T extends Widget, PropsT extends {}>(\n  WidgetClass: {new (props: PropsT): T},\n  props: PropsT\n): T {\n  const context = useContext(DeckGlContext);\n  const {widgets, deck} = context;\n  useEffect(() => {\n    // warn if the user supplied a pure-js widget, since it will be ignored\n    // NOTE: This effect runs once per widget. Context widgets and deck widget props are synced after first effect runs.\n    const internalWidgets = deck?.props.widgets;\n    if (widgets?.length && internalWidgets?.length && !deepEqual(internalWidgets, widgets, 1)) {\n      log.warn('\"widgets\" prop will be ignored because React widgets are in use.')();\n    }\n\n    return () => {\n      // Remove widget from context when it is unmounted\n      const index = widgets?.indexOf(widget);\n      if (index && index !== -1) {\n        widgets?.splice(index, 1);\n        deck?.setProps({widgets});\n      }\n    };\n  }, []);\n  const widget = useMemo(() => new WidgetClass(props), [WidgetClass]);\n\n  // Hook rebuilds widgets on every render: [] then [FirstWidget] then [FirstWidget, SecondWidget]\n  widgets?.push(widget);\n  widget.setProps(props);\n\n  useEffect(() => {\n    deck?.setProps({widgets});\n  }, [widgets]);\n\n  return widget;\n}\n", "import {CompassWidget as _CompassWidget} from '@deck.gl/widgets';\nimport type {CompassWidgetProps} from '@deck.gl/widgets';\nimport {useWidget} from '../utils/use-widget';\n\nexport const CompassWidget = (props: CompassWidgetProps = {}) => {\n  const widget = useWidget(_CompassWidget, props);\n  return null;\n};\n", "import {FullscreenWidget as _FullscreenWidget} from '@deck.gl/widgets';\nimport type {FullscreenWidgetProps} from '@deck.gl/widgets';\nimport {useWidget} from '../utils/use-widget';\n\nexport const FullscreenWidget = (props: FullscreenWidgetProps = {}) => {\n  const widget = useWidget(_FullscreenWidget, props);\n  return null;\n};\n", "import {ZoomWidget as _ZoomWidget} from '@deck.gl/widgets';\nimport type {ZoomWidgetProps} from '@deck.gl/widgets';\nimport {useWidget} from '../utils/use-widget';\n\nexport const ZoomWidget = (props: ZoomWidgetProps = {}) => {\n  const widget = useWidget(_ZoomWidget, props);\n  return null;\n};\n"],
  "mappings": "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",
  "names": ["React", "import_react", "import_react", "import_react", "import_react", "import_react", "x", "y", "v", "slice", "options", "vnodeId", "isValidElement", "rerenderQueue", "prevDebounce", "defer", "depthSort", "CAPTURE_REGEX", "eventClock", "eventProxy", "eventProxyCapture", "i", "EMPTY_OBJ", "EMPTY_ARR", "IS_NON_DIMENSIONAL", "isArray", "Array", "assign", "obj", "props", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "__i", "__u", "Fragment", "props", "children", "BaseComponent", "context", "this", "getDomSibling", "vnode", "childIndex", "__", "__i", "sibling", "__k", "length", "__e", "type", "updateParentDomPointers", "i", "child", "__c", "base", "enqueueRender", "c", "__d", "rerenderQueue", "push", "process", "__r", "prevDebounce", "options", "debounceRendering", "defer", "renderQueueLength", "component", "newVNode", "oldVNode", "oldDom", "commitQueue", "refQueue", "sort", "depthSort", "shift", "__v", "__P", "assign", "diff", "__n", "namespaceURI", "__u", "commitRoot", "diffChildren", "parentDom", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "namespace", "excessDomChildren", "isHydrating", "childVNode", "newDom", "firstChildDom", "result", "oldChildren", "EMPTY_ARR", "newChildrenLength", "constructNewChildrenArray", "EMPTY_OBJ", "ref", "applyRef", "insert", "nextSibling", "skewedIndex", "matchingIndex", "oldChildrenLength", "remainingOldChildren", "skew", "Array", "constructor", "String", "createVNode", "isArray", "__b", "key", "findMatchingIndex", "unmount", "parentVNode", "contains", "insertBefore", "nodeType", "findMatchingIndex", "childVNode", "oldChildren", "skewedIndex", "remainingOldChildren", "x", "y", "key", "type", "oldVNode", "__u", "length", "setStyle", "style", "value", "setProperty", "IS_NON_DIMENSIONAL", "test", "dom", "name", "oldValue", "namespace", "useCapture", "o", "cssText", "replace", "CAPTURE_REGEX", "toLowerCase", "slice", "l", "_attached", "eventClock", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "removeAttribute", "setAttribute", "createEventProxy", "this", "eventHandler", "_dispatched", "options", "event", "diff", "parentDom", "newVNode", "globalContext", "excessDomChildren", "commitQueue", "oldDom", "isHydrating", "refQueue", "tmp", "c", "isNew", "oldProps", "oldState", "snapshot", "clearProcessingException", "newProps", "isClassComponent", "provider", "componentContext", "i", "renderHook", "count", "renderResult", "newType", "constructor", "__e", "__b", "outer", "props", "prototype", "render", "contextType", "__c", "__", "__E", "BaseComponent", "doRender", "sub", "state", "context", "__n", "__d", "__h", "_sb", "__s", "getDerivedStateFromProps", "assign", "__v", "componentWillMount", "componentDidMount", "push", "componentWillReceiveProps", "shouldComponentUpdate", "__k", "some", "vnode", "componentWillUpdate", "componentDidUpdate", "__P", "__r", "getChildContext", "getSnapshotBeforeUpdate", "diffChildren", "isArray", "Fragment", "children", "base", "then", "MODE_HYDRATE", "nodeType", "nextSibling", "indexOf", "removeNode", "diffElementNodes", "diffed", "commitRoot", "root", "applyRef", "cb", "call", "newHtml", "oldHtml", "newChildren", "inputValue", "checked", "localName", "document", "createTextNode", "createElementNS", "is", "__m", "data", "childNodes", "EMPTY_OBJ", "attributes", "__html", "innerHTML", "getDomSibling", "ref", "hasRefUnmount", "current", "unmount", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "documentElement", "createElement", "namespaceURI", "firstChild", "slice", "EMPTY_ARR", "options", "__e", "error", "vnode", "oldVNode", "errorInfo", "component", "ctor", "handled", "__", "__c", "constructor", "getDerivedStateFromError", "setState", "__d", "componentDidCatch", "__E", "e", "vnodeId", "isValidElement", "undefined", "BaseComponent", "prototype", "update", "callback", "s", "this", "__s", "state", "assign", "props", "__v", "_sb", "push", "enqueueRender", "forceUpdate", "__h", "render", "Fragment", "rerenderQueue", "defer", "Promise", "then", "bind", "resolve", "setTimeout", "depthSort", "a", "b", "__b", "process", "__r", "CAPTURE_REGEX", "eventClock", "eventProxy", "createEventProxy", "eventProxyCapture", "i", "vnodeId", "isArray", "Array", "createVNode", "type", "props", "key", "isStaticChildren", "__source", "__self", "ref", "i", "normalizedProps", "vnode", "__k", "__", "__b", "__e", "__c", "constructor", "__v", "__i", "__u", "defaultProps", "options", "u", "u", "u", "viewport", "u", "import_react", "CompassWidget", "FullscreenWidget", "ZoomWidget"]
}
